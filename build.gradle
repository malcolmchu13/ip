plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    // Use fully-qualified main class in package GUI
    mainClass.set("GUI.Launcher")
}

shadowJar {
    archiveBaseName = "rat"
    archiveClassifier = null
}

run{
    standardInput = System.in
}

javafx {
    version = '22.0.2'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

sourceSets {
    main {
        resources {
            srcDirs = [ 'src/main/resources', 'src/main/java/resources' ]
        }
    }
}

checkstyle {
    toolVersion = '10.12.1'
    configDirectory = file('config/checkstyle')
    config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
    showViolations = true
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}

tasks.named('check') {
    dependsOn 'checkstyleMain', 'checkstyleTest'
}
